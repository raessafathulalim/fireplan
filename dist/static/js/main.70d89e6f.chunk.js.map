{"version":3,"sources":["components/layout/SignInLinks.js","store/actions/authAction.js","components/layout/SignOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetail.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignOutLinks","state","firebase","links","uid","layout_SignInLinks","layout_SignOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","createdAt","calendar","ProjectList","this","projects","projects_ProjectSummary","Component","Dashboard","_this$props","projects_ProjectList","dashboard_Notifications","react_router","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","authorFirstName","authorLastName","SignIn","email","password","onSubmitAction","e","preventDefault","_this","signIn","onChangeAction","setState","Object","defineProperty","target","value","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetail","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.70d89e6f.chunk.js","sourcesContent":["import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../store/actions/authAction'\r\n\r\nconst SignInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a onClick={props.signOut} >Logout</a></li>\r\n            <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignInLinks)\r\n","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase()\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email, \r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type:'LOGIN_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase()\r\n\r\n        firebase.auth().signOut().then(()=> {\r\n            dispatch({ type:'SIGNOUT_SUCCESS'})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp)=> {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch(err => {\r\n            dispatch({type: 'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\"\r\nconst SignOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignOutLinks\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignInLinks from './SignInLinks';\r\nimport SignOutLinks from './SignOutLinks';\r\nimport {connect} from 'react-redux'\r\nconst Navbar = (props) => {\r\n    const {auth, profile} = props\r\n    const links = auth.uid ? <SignInLinks profile={profile} /> : <SignOutLinks/>\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">FirePlan</Link>\r\n                { links }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n\r\n    const {notifications} = props\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"contification\">\r\n                        {notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text noted-date\">{moment(item.time.toDate()).fromNow()}</div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div>\r\n            <div className=\"card z-depth-0 project-summary\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p>{project.content}</p>\r\n                    <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary\r\n","import React, { Component } from 'react'\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass ProjectList extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"project-list section\">\r\n                {this.props.projects && this.props.projects.map(project => {\r\n                    return(\r\n                        <Link to={'/project/'+ project.id} key={project.id}>\r\n                            <ProjectSummary project={project} key={project.id} />\r\n                        </Link>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectList\r\n","import React, { Component } from 'react'\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const {notifications, projects, auth} = this.props\r\n\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        \r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n        {collection: 'notifications', limit: 5, orderBy: ['time', 'desc']}\r\n    ])\r\n)(Dashboard)\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetail = (props) => {\r\n    const {project, auth} = props\r\n\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n    if(project){\r\n        return(\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}.</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }else{\r\n        return (\r\n            <div className=\"container center\">\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{\r\n        collection: 'projects'\r\n    }])\r\n)(ProjectDetail)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../../store/actions/authAction' \r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    onSubmitAction = (e) =>{\r\n        e.preventDefault()\r\n        this.props.signIn(this.state)\r\n    }\r\n\r\n    onChangeAction = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {authError, auth} = this.props\r\n\r\n        if(auth.uid) return <Redirect to='/' />\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.onSubmitAction}>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.onChangeAction} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.onChangeAction} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {signUp} from '../../store/actions/authAction' \r\n\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    onSubmitAction = (e) =>{\r\n        e.preventDefault()\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    onChangeAction = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {authError, auth} = this.props\r\n\r\n        if(auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.onSubmitAction}>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.onChangeAction} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.onChangeAction} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.onChangeAction} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.onChangeAction} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    onSubmitAction = (e) =>{\r\n        e.preventDefault()\r\n        // console.log(this.state)\r\n        this.props.createProject(this.state)\r\n\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    onChangeAction = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {auth} = this.props\r\n\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.onSubmitAction}>\r\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.onChangeAction} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.onChangeAction}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)( CreateProject )\r\n","export const createProject  = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // TODO: Make action async\r\n        const firestore = getFirestore()\r\n\r\n        const profile = getState().firebase.profile\r\n        const authorId = getState().firebase.auth.uid\r\n\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({\r\n                type: 'CREATE_PROJECT',\r\n                project\r\n            })\r\n        }).catch((err) => {\r\n            dispatch({\r\n                type: 'CREATE_PROJECT_ERROR',\r\n                err\r\n            })\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport Navbar from './components/layout/Navbar';\r\nimport Dashboard from './components/dashboard/Dashboard'\r\nimport ProjectDetail from './components/projects/ProjectDetail'\r\nimport SignIn from './components/auth/SignIn';\r\nimport SignUp from './components/auth/SignUp';\r\nimport CreateProject from './components/projects/CreateProject';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Dashboard} />\r\n          <Route path=\"/project/:id\" component={ProjectDetail} />\r\n          <Route path=\"/signin\" component={SignIn}/>\r\n          <Route path=\"/signup\" component={SignUp}/>\r\n          <Route path=\"/create\" component={CreateProject}/>\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n            case 'LOGIN_ERROR':\r\n            console.log('login error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success')\r\n            return state\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer\r\n","const initState = {\r\n    projects: [\r\n        {id: '1', title:'Apapun ini namanya example aja 1', content: 'Fugiat deserunt et eu do quis qui do officia veniam ullamco voluptate dolor anim.'},\r\n        {id: '2', title:'Apapun ini namanya example aja 2', content: 'Fugiat deserunt et eu do quis qui do officia veniam ullamco voluptate dolor anim.'},\r\n        {id: '3', title:'Apapun ini namanya example aja 3', content: 'Fugiat deserunt et eu do quis qui do officia veniam ullamco voluptate dolor anim.'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project)\r\n            return state\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err)\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default projectReducer\r\n","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport {combineReducers} from 'redux'\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer, \r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBY9fuHdh-KvA9ed1G4ytHTlltt4VxOfyU\",\r\n    authDomain: \"fireplan-db6cc.firebaseapp.com\",\r\n    databaseURL: \"https://fireplan-db6cc.firebaseio.com\",\r\n    projectId: \"fireplan-db6cc\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"191857044257\",\r\n    appId: \"1:191857044257:web:1abad40bcd67001c\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig)\r\n\r\n  firebase.firestore().settings({\r\n      // timestampInSpapshots: true\r\n  })\r\n\r\n\r\n  export default firebase","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport rootReducer from './store/reducers/rootReducer'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport {reduxFirestore, getFirestore} from 'redux-firestore'\r\nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase'\r\nimport fbConfig from './config/fbConfig'\r\n\r\n\r\nconst store = createStore(rootReducer, \r\n    compose(\r\n            applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore })),\r\n            reduxFirestore(fbConfig),\r\n            reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\r\n        )\r\n    )\r\n\r\n\r\n    store.firebaseAuthIsReady.then(()=>{\r\n        ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n        serviceWorker.unregister();\r\n    })\r\n\r\n"],"sourceRoot":""}